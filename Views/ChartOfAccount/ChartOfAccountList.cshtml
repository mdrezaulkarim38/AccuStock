@model IEnumerable<AccuStock.Models.ChartOfAccount>

@{
    ViewData["Title"] = "Chart Of Account List";
}

<div class="row">
    <div class="col-md-12">
        <div class="card shadow">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">Chart Of Account List</h5>
                <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addCOAModal">
                    <i class="fas fa-plus"></i> Add New
                </button>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="basic-datatables" class="table table-striped table-hover">
                        <thead class="table-primary">
                        <tr>
                            <th>SL No.</th>
                            <th>Name</th>
                            <th>Account Code</th>
                            <th>Account Type</th>
                            <th>Action</th>
                        </tr>
                        </thead>
                        <tbody>
                        @{
                            int index = 0;
                        }
                        @foreach (var chartOfAccount in Model)
                        {
                            index++;
                            <tr>
                                <td>@index</td>
                                <td>@chartOfAccount.Name</td>
                                <td>@chartOfAccount.AccountCode</td>
                                <td>@chartOfAccount.ChartOfAccountType?.Name</td>
                                <td>
                                    <button class="btn btn-warning btn-sm"
                                            onclick="editCOA('@chartOfAccount.Id', '@chartOfAccount.ParentId', '@chartOfAccount.Name', '@chartOfAccount.AccountCode', '@chartOfAccount.ChartOfAccountTypeId')"
                                            data-bs-toggle="modal" data-bs-target="#addCOAModal">
                                        <i class="fas fa-edit"></i> Edit
                                    </button>
                                    @* <button class="btn btn-danger btn-sm" onclick="deleteCOA('@chartOfAccount.Id')">
                                        <i class="fas fa-trash-alt"></i> Delete
                                    </button> *@
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Adding/Editing COA -->
<div class="modal fade" id="addCOAModal" tabindex="-1" aria-labelledby="addCOAModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="addCOAModalLabel">Chart Of Account</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="CreateOrUpdateChartOfAccount" method="post">
                    <input type="hidden" id="COAId" name="Id">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="ChartOfAccountTypeId" class="form-label">Select COA Type</label>
                            <select class="form-select" id="ChartOfAccountTypeId" name="ChartOfAccountTypeId" required>
                                <option value="">Select COA Type</option>
                                @if (ViewBag.ChartofAccountType != null)
                                {
                                    var listOfCoaType = (List<ChartOfAccountType>)ViewBag.ChartofAccountType;
                                    var parentAccounts = listOfCoaType.Where(coa => coa.ParentId == 0).OrderBy(coa => coa.Name);

                                    @foreach (var parent in parentAccounts)
                                    {
                                        var childAccounts = listOfCoaType.Where(coa => coa.ParentId == parent.Id).OrderBy(coa => coa.Name).ToList();

                                        <optgroup label="@parent.Name">
                                            @foreach (var child in childAccounts)
                                            {
                                                <option value="@child.Id">@child.Name</option>
                                            }
                                        </optgroup>
                                    }
                                }
                            </select>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label for="Name" class="form-label">Name</label>
                            <input type="text" class="form-control" id="Name" name="Name" required>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label>
                                <input type="checkbox" id="isSubAccount" name="isSubAccount"/>
                                Make this a sub-account
                            </label>
                        </div>

                        <div class="col-md-6 mb-3" id="parentAccountContainer" style="display: none;">
                            <label for="ParentId" class="form-label">Select Parent</label>
                            <select class="form-select" id="ParentId" name="ParentId">
                                <option value="">Select Parent</option>
                                @if (ViewBag.selectChartOfAccountList != null)
                                {
                                    var chartOfAccounts = (List<ChartOfAccount>)ViewBag.selectChartOfAccountList;
                                    var groupedCoAs = chartOfAccounts
                                        .GroupBy(coa => coa.ChartOfAccountType?.Name ?? "Uncategorized")
                                        .OrderBy(g => g.Key);

                                    @foreach (var group in groupedCoAs)
                                    {
                                        <optgroup label="@group.Key">
                                            @foreach (var coa in group.OrderBy(coa => coa.Name))
                                            {
                                                <option value="@coa.Id">@coa.Name</option>
                                            }
                                        </optgroup>
                                    }
                                }
                            </select>

                        </div>

                        <div class="col-md-6 mb-3">
                            <label for="AccountCode" class="form-label">Account Code</label>
                            <input type="text" class="form-control" id="AccountCode" name="AccountCode">
                        </div>
                    </div>

                    <div class="d-flex justify-content-between">
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-check-circle"></i> <span id="modalSubmitText">Submit</span>
                        </button>
                        <button type="reset" class="btn btn-secondary">
                            <i class="bi bi-arrow-clockwise"></i> Reset
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById("isSubAccount").addEventListener("change", function () {
            document.getElementById("parentAccountContainer").style.display = this.checked ? "block" : "none";
        });

        function editCOA(id, parentId, name, accountCode, accountTypeId) {
            document.getElementById("COAId").value = id;
            document.getElementById("Name").value = name;
            document.getElementById("AccountCode").value = accountCode;
            document.getElementById("ChartOfAccountTypeId").value = accountTypeId;
            document.getElementById("isSubAccount").checked = parentId !== "null";
            document.getElementById("parentAccountContainer").style.display = parentId !== "null" ? "block" : "none";
            document.getElementById("ParentId").value = parentId;

            document.getElementById("addCOAModalLabel").textContent = "Edit Chart Of Account";
            document.getElementById("modalSubmitText").textContent = "Update";
        }
    </script>
}
