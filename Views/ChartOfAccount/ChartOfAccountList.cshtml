@model IEnumerable<AccuStock.Models.ChartOfAccount>

@{
    ViewData["Title"] = "Chart Of Account List";
}

<div class="row">
    <div class="col-md-12">
        <div class="card shadow">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">Chart Of Account List</h5>
                <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addCOAModal">
                    <i class="fas fa-plus"></i> Add New
                </button>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table  datanew">
                        <thead class="table-primary">
                        <tr>
                            <th>SL No.</th>
                            <th>Name</th>
                            <th>Account Code</th>
                            <th>Account Type</th>
                            <th>Action</th>
                        </tr>
                        </thead>
                        <tbody>
                        @{
                            int index = 0;
                        }
                        @foreach (var chartOfAccount in Model)
                        {
                            index++;
                            <tr>
                                <td>@index</td>
                                <td>@chartOfAccount.Name</td>
                                <td>@chartOfAccount.AccountCode</td>
                                <td>@chartOfAccount.ChartOfAccountType?.Name</td>
                                <td>
                                    <button class="btn btn-warning btn-sm"
                                            onclick="editCOA('@chartOfAccount.Id', '@chartOfAccount.ParentId', '@chartOfAccount.Name', '@chartOfAccount.AccountCode', '@chartOfAccount.ChartOfAccountTypeId')"
                                            data-bs-toggle="modal" data-bs-target="#addCOAModal">
                                        <i class="fas fa-edit"></i> Edit
                                    </button>
                                    @* <button class="btn btn-danger btn-sm" onclick="deleteCOA('@chartOfAccount.Id')">
                                        <i class="fas fa-trash-alt"></i> Delete
                                    </button> *@
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Adding/Editing COA -->
<div class="modal fade" id="addCOAModal" tabindex="-1" aria-labelledby="addCOAModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header text-dark" style="background : #f9f9fb;">
                <h5 class="modal-title" id="addCOAModalLabel">Chart Of Account</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="coaForm" asp-action="CreateOrUpdateChartOfAccount" method="post">
                    <input type="hidden" id="COAId" name="Id">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="ChartOfAccountTypeId" class="form-label">Select COA Type</label>
                            <select class="form-select" id="ChartOfAccountTypeId" name="ChartOfAccountTypeId" required>
                                <option value="">Select COA Type</option>
                            </select>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label for="Name" class="form-label">Name</label>
                            <input type="text" class="form-control" id="Name" name="Name" required>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label>
                                <input type="checkbox" id="isSubAccount" name="isSubAccount" />
                                Make this a sub-account
                            </label>
                        </div>

                        <div class="col-md-6 mb-3" id="parentAccountContainer" style="display: none;">
                            <label for="ParentId" class="form-label">Select Parent</label>
                            <select class="form-select" id="ParentId" name="ParentId">
                                <option value="">Select Parent</option>
                            </select>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label for="AccountCode" class="form-label">Account Code</label>
                            <input type="text" class="form-control" id="AccountCode" name="AccountCode">
                        </div>
                    </div>

                    <div class="d-flex">
                        <button type="submit" class="btn btn-success btn-sm me-2">
                            <i class="bi bi-check-circle"></i> <span id="modalSubmitText">Submit</span>
                        </button>
                        <button type="reset" class="btn btn-secondary btn-sm" id="resetForm">
                            <i class="bi bi-arrow-clockwise"></i> Refresh
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $('#addCOAModal').on('show.bs.modal', function (e) {
            loadChartOfAccountTypes();
        });

        document.getElementById("isSubAccount").addEventListener("change", function () {
            const parentContainer = document.getElementById("parentAccountContainer");
            parentContainer.style.display = this.checked ? "block" : "none";
            if (this.checked) {
                const selectedTypeId = $('#ChartOfAccountTypeId').val();
                loadParentAccounts(selectedTypeId);
            }
        });

        $('#ChartOfAccountTypeId').on('change', function() {
            if ($('#isSubAccount').is(':checked')) {
                loadParentAccounts(this.value);
            }
        });

        function loadChartOfAccountTypes(selectedId = '') {
            $.ajax({
                url: '@Url.Action("GetChartOfAccountTypes", "ChartOfAccount")',
                type: 'GET',
                success: function (data) {
                    const select = $('#ChartOfAccountTypeId');
                    select.empty();
                    select.append('<option value="">Select COA Type</option>');

                    const parentAccounts = data.filter(coa => coa.parentId === 0);
                    parentAccounts.forEach(parent => {
                        const childAccounts = data.filter(coa => coa.parentId === parent.id);
                        if (childAccounts.length > 0) {
                            let optgroup = $('<optgroup>').attr('label', parent.name);
                            childAccounts.forEach(child => {
                                let option = $('<option>').val(child.id).text(child.name);
                                if (child.id == selectedId) option.attr('selected', 'selected');
                                optgroup.append(option);
                            });
                            select.append(optgroup);
                        }
                    });
                },
                error: function (xhr, status, error) {
                    console.error('Error loading COA types:', error);
                }
            });
        }

        function loadParentAccounts(chartOfAccountTypeId = '', selectedId = '') {
            $.ajax({
                url: '@Url.Action("GetParentAccounts", "ChartOfAccount")',
                type: 'GET',
                data: { chartOfAccountTypeId: chartOfAccountTypeId },
                success: function (data) {
                    const select = $('#ParentId');
                    select.empty();
                    select.append('<option value="">Select Parent</option>');
                    if (!chartOfAccountTypeId) {
                        const groupedAccounts = {};
                        data.forEach(coa => {
                            const typeName = coa.chartOfAccountType?.name || 'Uncategorized';
                            if (!groupedAccounts[typeName]) {
                                groupedAccounts[typeName] = [];
                            }
                            groupedAccounts[typeName].push(coa);
                        });

                        for (const [typeName, accounts] of Object.entries(groupedAccounts)) {
                            let optgroup = $('<optgroup>').attr('label', typeName);
                            accounts.sort((a, b) => a.name.localeCompare(b.name)).forEach(coa => {
                                let option = $('<option>').val(coa.id).text(coa.name);
                                if (coa.id == selectedId) option.attr('selected', 'selected');
                                optgroup.append(option);
                            });
                            select.append(optgroup);
                        }
                    } else {
                        data.sort((a, b) => a.name.localeCompare(b.name)).forEach(coa => {
                            let option = $('<option>').val(coa.id).text(coa.name);
                            if (coa.id == selectedId) option.attr('selected', 'selected');
                            select.append(option);
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error loading parent accounts:', error);
                }
            });
        }

        function editCOA(id, parentId, name, accountCode, accountTypeId) {
            document.getElementById("COAId").value = id;
            document.getElementById("Name").value = name;
            document.getElementById("AccountCode").value = accountCode;

            const isSubAccount = parentId !== "null" && parentId !== "0";
            document.getElementById("isSubAccount").checked = isSubAccount;
            document.getElementById("parentAccountContainer").style.display = isSubAccount ? "block" : "none";

            loadChartOfAccountTypes(accountTypeId);
            if (isSubAccount) {
                loadParentAccounts(accountTypeId, parentId);
            }

            document.getElementById("addCOAModalLabel").textContent = "Edit Chart Of Account";
            document.getElementById("modalSubmitText").textContent = "Update";
        }

        $('#resetForm').click(function() {
            $('#coaForm')[0].reset();
            document.getElementById("parentAccountContainer").style.display = "none";
            document.getElementById("COAId").value = "";
            document.getElementById("addCOAModalLabel").textContent = "Chart Of Account";
            document.getElementById("modalSubmitText").textContent = "Submit";
            loadChartOfAccountTypes();
        });
    </script>
}