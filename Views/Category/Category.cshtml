@model IEnumerable<AccuStock.Models.Category>
@{
    ViewData["Title"] = "Category";
}

<div class="row">
    <div class="col-md-12">
        <div class="card shadow">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">Category List</h5>
                <button class="btn btn-primary btn-sm" id="addNewCategory" data-bs-toggle="modal" data-bs-target="#categoryModal">
                    <i class="fas fa-plus"></i> Add New
                </button>
            </div>
            <div class="card-body">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
                }
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
                }
                <div class="table-responsive">
                    <table class="table datanew">
                        <thead class="table-primary">
                            <tr>
                                <th>SL No.</th>
                                <th>Name</th>
                                <th>Parent Category</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int index = 0;
                            }
                            @foreach (var category in Model)
                            {
                                index++;
                                <tr>
                                    <td>@index</td>
                                    <td>@category.Name</td>
                                    <td>@(category.ParentCategory?.Name ?? "None")</td>
                                    <td class="d-flex gap-2">
                                        <button class="btn btn-warning btn-sm"
                                                onclick="editCategory(@category.Id, '@category.Name', '@(category.ParentCategoryId ?? 0)')"
                                                data-bs-toggle="modal" data-bs-target="#categoryModal">
                                            <i class="fas fa-edit"></i> Edit
                                        </button>
                                        <form asp-action="DeleteCat" method="post" onsubmit="return confirm('Are you sure you want to delete this category?');">
                                            <input type="hidden" name="id" value="@category.Id" />
                                            <button type="submit" class="btn btn-danger btn-sm">
                                                <i class="fas fa-trash-alt"></i> Delete
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Add/Edit Category -->
<div class="modal fade" id="categoryModal" tabindex="-1" aria-labelledby="categoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="categoryModalLabel">Add Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="categoryForm" asp-action="CreateOrUpdateCat" method="post">
                    <input type="hidden" id="CategoryId" name="Id" />

                    <div class="mb-3">
                        <label for="Name" class="form-label">Category Name</label>
                        <input type="text" class="form-control" id="Name" name="Name" required />
                    </div>

                    <div class="mb-3">
                        <label for="ParentCategoryId" class="form-label">Parent Category</label>
                        <select class="form-select" id="ParentCategoryId" name="ParentCategoryId">
                            <option value="">-- Select --</option>
                            @foreach (var parent in Model)
                            {
                                <option value="@parent.Id">@parent.Name</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <a class="btn btn-primary btn-sm" href="@Url.Action("AddCategory", "Category")" id="addNewParentButton">Add New Parent</a>
                    </div>

                    <div class="d-flex justify-content-start gap-2">
                        <button type="submit" class="btn btn-success btn-sm">
                            <i class="bi bi-check-circle"></i> <span id="modalSubmitText">Submit</span>
                        </button>
                        <button type="reset" class="btn btn-secondary btn-sm" onclick="resetCategoryModal()">
                            <i class="bi bi-arrow-clockwise"></i> Reset
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function resetCategoryModal() {
            document.getElementById("categoryForm").reset();
            document.getElementById("CategoryId").value = "";
            document.getElementById("Name").value = "";
            document.getElementById("ParentCategoryId").value = "";
            document.getElementById("categoryModalLabel").textContent = "Add Category";
            document.getElementById("modalSubmitText").textContent = "Submit";
        }

        function editCategory(id, name, parentId) {
            document.getElementById("CategoryId").value = id;
            document.getElementById("Name").value = name;
            document.getElementById("ParentCategoryId").value = parentId || "";
            document.getElementById("categoryModalLabel").textContent = "Edit Category";
            document.getElementById("modalSubmitText").textContent = "Update";
        }

        document.addEventListener("DOMContentLoaded", function () {
            var categoryModal = document.getElementById("categoryModal");
            categoryModal.addEventListener("hidden.bs.modal", resetCategoryModal);

            document.getElementById("addNewCategory").addEventListener("click", function () {
                resetCategoryModal();
            });

            // Handle form submission via AJAX
            document.getElementById("categoryForm").addEventListener("submit", function (e) {
                e.preventDefault();
                var form = this;
                var formData = new FormData(form);

                fetch(form.action, {
                    method: "POST",
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        window.location.reload(); // Reload to refresh the category list
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    alert("An error occurred. Please try again.");
                });
            });
        });
    </script>
}