@{
    ViewData["Title"] = "New Journal";
}

<div class="row">
    <div class="col-md-12">
        <div class="card shadow">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">New Journal</h5>
            </div>
            <div class="card-body">
                <form id="journalForm" method="post">
                    <table class="table">
                        <tbody>
                            <tr>
                                <td><strong>Date:</strong></td>
                                <td>
                                    <input type="date" id="VchDate" name="VchDate" class="form-control"
                                        value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                                </td>
                            </tr>
                            <tr>
                                <td><strong>Reference:</strong></td>
                                <td>
                                    <input type="text" id="RefNo" name="RefNo" class="form-control"
                                        placeholder="Enter Reference No" />
                                </td>
                            </tr>
                            <tr>
                                <td><strong>Notes:</strong></td>
                                <td>
                                    <input type="text" id="Notes" name="Notes" class="form-control"
                                        placeholder="Enter Notes" />
                                </td>
                            </tr>
                            <tr>
                                <td><strong>Journal Type:</strong></td>
                                <td>
                                    <select id="JournalType" class="form-select" name="JournalType">
                                        <option value="" selected>Select Journal Type</option>
                                        <option value="1">CV</option>
                                        <option value="2">JV</option>
                                    </select>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <table class="table table-bordered table-striped mt-5" id="journalTable">
                        <thead style="background:#fafafa;">
                            <tr>
                                <th>Head Of Account</th>
                                <th>Description</th>
                                <th>Debit</th>
                                <th>Credit</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="rowTemplate">
                                <td>
                                    <select name="HeadOfAccount" class="form-control headOfAccountDropdown">
                                        <option value="">Select Chart of Account</option>
                                    </select>
                                </td>
                                <td><input type="text" name="Description" class="form-control" /></td>
                                <td><input type="text" name="Debit" class="form-control" /></td>
                                <td><input type="text" name="Credit" class="form-control" /></td>
                                <td><button type="button" class="btn btn-danger btn-sm removeRow">X</button></td>
                            </tr>
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="5">
                                    <button type="button" class="btn btn-success btn-sm" id="addNewRow">Add New Row</button>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="4" class="text-end"><strong>Total:</strong></td>
                                <td><span>0.00</span></td>
                            </tr>
                            <tr>
                                <td colspan="4" class="text-end"><strong>Difference:</strong></td>
                                <td><span>0.00</span></td>
                            </tr>
                        </tfoot>
                    </table>

                    <div class="mt-4">
                        <button type="submit" class="btn btn-primary btn-sm">Submit</button>
                        <a href="@Url.Action("JournalList", "Journal")" class="btn btn-secondary btn-sm">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .table> :not(:first-child) {
        border-top: none !important;
    }
</style>

@section Scripts {
    <script>
        let isDropdownPopulated = false;

        function loadHeadOfAccountDropdown() {
            if (isDropdownPopulated) return;

            $.ajax({
                url: '@Url.Action("GetHeadOfAccounts", "ChartOfAccount")',
                type: 'GET',
                success: function (data) {
                    const selectElements = document.querySelectorAll('.headOfAccountDropdown');
                    selectElements.forEach(select => {
                        select.innerHTML = '<option value="">Select Chart of Account</option>';
                        const groupedAccounts = {};
                        data.forEach(account => {
                            const typeName = account.accountType || 'Uncategorized';
                            if (!groupedAccounts[typeName]) {
                                groupedAccounts[typeName] = [];
                            }
                            groupedAccounts[typeName].push(account);
                        });
                        for (const [typeName, accounts] of Object.entries(groupedAccounts)) {
                            let optgroup = document.createElement('optgroup');
                            optgroup.label = typeName;

                            accounts.sort((a, b) => a.name.localeCompare(b.name)).forEach(account => {
                                let option = document.createElement('option');
                                option.value = account.id;
                                option.textContent = '[' + account.accountCode + '] ' + account.name;
                                optgroup.appendChild(option);
                            });

                            select.appendChild(optgroup);
                        }
                    });
                    isDropdownPopulated = true;
                },
                error: function (xhr, status, error) {
                    console.error('Error loading Head of Accounts:', error);
                }
            });
        }

        // Event listener for the Debit and Credit fields to ensure only one is filled at a time
        document.querySelector("#journalTable").addEventListener("input", function (event) {
            if (event.target.name === "Debit" || event.target.name === "Credit") {
                var row = event.target.closest("tr");
                var debitInput = row.querySelector("[name='Debit']");
                var creditInput = row.querySelector("[name='Credit']");
                if (event.target.name === "Debit") {
                    if (debitInput.value !== "") {
                        creditInput.value = "";
                    }
                } else if (event.target.name === "Credit") {
                    if (creditInput.value !== "") {
                        debitInput.value = "";
                    }
                }
                updateTotals();  
            }
        });

        function updateTotals() {
            let totalDebit = 0;
            let totalCredit = 0;

            document.querySelectorAll("#journalTable tbody tr").forEach(function (row) {
                const debit = parseFloat(row.querySelector("[name='Debit']").value) || 0;
                const credit = parseFloat(row.querySelector("[name='Credit']").value) || 0;

                totalDebit += debit;
                totalCredit += credit;
            });

            document.querySelector("#journalTable tfoot tr:nth-child(2) td span").textContent = totalDebit.toFixed(2);
            document.querySelector("#journalTable tfoot tr:nth-child(3) td span").textContent = (totalDebit - totalCredit).toFixed(2);
        }

        document.getElementById("addNewRow").addEventListener("click", function () {
            var tableBody = document.querySelector("#journalTable tbody");
            var newRow = document.querySelector(".rowTemplate").cloneNode(true);
            newRow.querySelectorAll("input").forEach(function (input) {
                input.value = "";
            });

            tableBody.appendChild(newRow);
            loadHeadOfAccountDropdown(); 
        });

        document.querySelector("#journalTable").addEventListener("click", function (event) {
            if (event.target.classList.contains("removeRow")) {
                var row = event.target.closest("tr");
                row.remove();
                updateTotals(); 
            }
        });
        document.getElementById("journalForm").addEventListener("submit", function (event) {
            var rows = document.querySelectorAll("#journalTable tbody tr");
            if (rows.length < 2) {
                alert("You must have at least two rows in the table.");
                event.preventDefault(); 
            }
        });

        document.addEventListener("DOMContentLoaded", function () {
            loadHeadOfAccountDropdown();
        });
    </script>
}
